# -*- coding: utf-8 -*-
"""Untitled20.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mnbGeFFKb3Ow5V6cOteG0IFP5T_stu_t

# Task 1

Read the csv file and load the dataset into a suitable data structure.
"""

import csv
with open('emp_data_v2.csv', mode='r') as file:
    csvFile = csv.reader(file)
    for lines in csvFile:
        print(lines)

"""1. Average salary of all the employees.
2. The highest salary in the company
3. The number of employees in each department
"""

import csv

def process_employee_data():
    total_salary = 0
    employee_count = 0
    highest_salary = 0
    highest_salary_employee = ""
    missing_values = 0
    invalid_values = 0
    department_counts = {}

    # Open the CSV file
    with open('emp_data_v2.csv', mode='r') as file:
        csvFile = csv.reader(file)
        header = next(csvFile)  # Skip the header row
        name_index = header.index('name')  # Find the index of the 'Name' column
        salary_index = header.index('salary')  # Find the index of the 'Salary' column
        dept_index = header.index('department')  # Find the index of the 'Department' column

        # Loop through the remaining rows
        for row_number, lines in enumerate(csvFile, start=2):  # start=2 to account for the header
            employee_name = lines[name_index]
            salary_value = lines[salary_index]
            department = lines[dept_index]

            # Check for missing or invalid salary values
            if not salary_value:
                missing_values += 1
                continue
            try:
                salary = float(salary_value)
            except ValueError:
                invalid_values += 1
                continue

            # Track total salary and count for average calculation
            total_salary += salary
            employee_count += 1

            # Track the highest salary and corresponding employee
            if salary > highest_salary:
                highest_salary = salary
                highest_salary_employee = employee_name

            # Count employees by department
            if department:
                if department in department_counts:
                    department_counts[department] += 1
                else:
                    department_counts[department] = 1

    # Calculate the average salary
    average_salary = total_salary / employee_count if employee_count > 0 else 0

    # Write results to results.txt and print to console
    with open('results.txt', mode='w') as result_file:

        # Salary statistics
        result_file.write(f"Total number of employees: {employee_count}\n")
        result_file.write(f"Average salary: ${average_salary}\n")


        print(f"Average salary: ${average_salary}")
        #print(f"Total salary paid: ${total_salary}")
        print(f"Total number of employees: {employee_count}")
        # Highest salary
        if highest_salary_employee:
            result_file.write(f"Employee with the highest salary: {highest_salary_employee} (${highest_salary})\n")
            print(f"Employee with the highest salary: {highest_salary_employee} (${highest_salary})")
        else:
            result_file.write("No valid salary data found for highest salary.\n")
            print("No valid salary data found for highest salary.")


        # Missing and invalid data
        result_file.write(f"Missing salary values: {missing_values}\n")
        result_file.write(f"Invalid salary values: {invalid_values}\n")


        # Department-wise employee count
        result_file.write("\nEmployee count by department:\n")
        print("\nEmployee count by department:")
        for department, count in department_counts.items():
            result_file.write(f"Department: {department}, Employees: {count}\n")
            print(f"Department: {department}, Employees: {count}")

# Example usage
process_employee_data()